name: deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - stage
          - prod

concurrency: ${{ inputs.environment }}

jobs:
  terraform-plan:
    name: Terraform
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }} 

    permissions:
      id-token: write
      contents: read

    outputs:
      tfdir: ${{ steps.tfdir.outputs.dir }}

    steps:
      - name: Set branch
        id: env
        run: |
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
            echo "branch=main" >> "$GITHUB_OUTPUT"
          elif [[ "${{ inputs.environment }}" == "stage" ]]; then
            echo "branch=stage" >> "$GITHUB_OUTPUT"
          else
            echo "branch=develop" >> "$GITHUB_OUTPUT"
          fi

      - name: Set working dir
        id: tf-env
        run: |
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
            echo "tfdir=prod" >> "$GITHUB_OUTPUT"
          elif [[ "${{ inputs.environment }}" == "stage" ]]; then
            echo "tfdir=stage" >> "$GITHUB_OUTPUT"
          else
            echo "tfdir=dev" >> "$GITHUB_OUTPUT"
          fi

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.env.outputs.branch }}

      - name: DOCKER
        run: docker -h

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      
      - name: pipenv
        run: pipenv install

      - name: Set Terraform working directory
        id: tf-dir
        run: echo "dir=terraform/infrastructure/${{ steps.tf-env.outputs.tfdir }}" >> "$GITHUB_OUTPUT"

      - name: Terraform Init
        working-directory: ${{ steps.tf-dir.outputs.dir }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ steps.tf-dir.outputs.dir }}
        run: terraform plan -out=tfplan

      - name: Upload tfplan as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ steps.tf-dir.outputs.dir }}/tfplan

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }} 
      
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
                
      - name: Download tfplan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ needs.terraform-plan.outputs.tfdir }}

      - name: Terraform Apply
        working-directory: ${{ needs.terraform-plan.outputs.tfdir }}
        run: terraform apply -auto-approve tfplan
